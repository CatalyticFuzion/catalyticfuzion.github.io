name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

# Set required permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Create fresh Docusaurus installation
        run: |
          # Backup important content
          mkdir -p _backup
          cp -r docs _backup/ || echo "No docs to backup"
          cp README.md _backup/ || echo "No README.md to backup"
          cp package.json _backup/ || echo "No package.json to backup"
      
          # Remove current installation and conflicting config files
          rm -rf node_modules package-lock.json .docusaurus build
          rm -f docusaurus.config.ts || echo "No docusaurus.config.ts to remove"
          
          # Create a completely fresh Docusaurus installation non-interactively
          # Avoiding the problematic arguments that caused the previous error
          echo "Creating new Docusaurus template"
          yes | npx create-docusaurus@latest temp classic
          
          echo "Listing temp directory contents:"
          ls -la temp/ || echo "Temp directory not created or empty"
          
          # Only try to copy if the temp directory exists and has content
          if [ -d "temp" ] && [ "$(ls -A temp)" ]; then
            echo "Copying files from template"
            cp -r temp/* . || echo "Failed to copy files"
          else
            echo "Temp directory not created or empty, skipping copy"
          fi
          
          # Clean up
          rm -rf temp || echo "No temp directory to remove"
          
          # Restore content from backup
          rm -rf docs
          cp -r _backup/docs . || mkdir -p docs
          
          # Create intro.md in both locations to ensure compatibility
          if [ ! -f "docs/intro.md" ]; then
            cat > docs/intro.md << 'EOF'
          ---
          slug: /intro
          title: Introduction to CatalyticFuzion
          sidebar_position: 1
          ---
      
          # Introduction to CatalyticFuzion
      
          CatalyticFuzion is an innovative project aimed at creating a Human-to-AI Domain Specific Language (DSL) by building on concepts from Gherkin and object-oriented programming paradigms.
      
          ## Vision
      
          The project originally started as "GherkinSharp," inspired by the Behavior-Driven Development (BDD) paradigm, but has evolved into CatalyticFuzion as we move beyond traditional BDD constraints toward a more flexible and powerful human-AI interface.
      
          Our goal is to create a DSL that:
          - Makes it easier for humans to communicate complex concepts to AI systems
          - Leverages the best of both Gherkin's readable syntax and object-oriented programming
          - Acts as a catalyst for effective human-AI collaboration
          EOF
          fi
          
          # Update docusaurus.config.js with our settings
          cat > docusaurus.config.js << 'EOF'
          // @ts-check
          // Simple configuration file for Docusaurus
      
          /** @type {import('@docusaurus/types').Config} */
          const config = {
            title: 'CatalyticFuzion',
            tagline: 'Human-to-AI Domain Specific Language',
            favicon: 'img/favicon.ico',
          
            url: 'https://catalyticfuzion.github.io',
            baseUrl: '/',
          
            organizationName: 'catalyticfuzion',
            projectName: 'catalyticfuzion.github.io',
          
            onBrokenLinks: 'warn',
            onBrokenMarkdownLinks: 'warn',
          
            i18n: {
              defaultLocale: 'en',
              locales: ['en'],
            },
          
            presets: [
              [
                'classic',
                /** @type {import('@docusaurus/preset-classic').Options} */
                ({
                  docs: {
                    routeBasePath: 'docs',
                    sidebarPath: require.resolve('./sidebars.js'),
                    editUrl: 'https://github.com/catalyticfuzion/catalyticfuzion.github.io/tree/main',
                  },
                  blog: false,
                  theme: {
                    customCss: require.resolve('./src/css/custom.css'),
                  },
                }),
              ],
            ],
          
            themeConfig:
              /** @type {import('@docusaurus/preset-classic').ThemeConfig} */
              ({
                navbar: {
                  title: 'CatalyticFuzion',
                  logo: {
                    alt: 'CatalyticFuzion Logo',
                    src: 'img/logo.svg',
                  },
                  items: [
                    {
                      to: '/docs/intro',
                      label: 'Documentation',
                      position: 'left',
                    },
                    {
                      href: 'https://github.com/catalyticfuzion/catalyticfuzion.github.io',
                      label: 'GitHub',
                      position: 'right',
                    },
                  ],
                },
                footer: {
                  style: 'dark',
                  links: [
                    {
                      title: 'Docs',
                      items: [
                        {
                          label: 'Introduction',
                          to: '/docs/intro',
                        },
                      ],
                    },
                    {
                      title: 'Community',
                      items: [
                        {
                          label: 'GitHub Discussions',
                          href: 'https://github.com/catalyticfuzion/catalyticfuzion.github.io/discussions',
                        },
                      ],
                    },
                    {
                      title: 'More',
                      items: [
                        {
                          label: 'GitHub',
                          href: 'https://github.com/catalyticfuzion/catalyticfuzion.github.io',
                        },
                      ],
                    },
                  ],
                  copyright: `Copyright Â© ${new Date().getFullYear()} CatalyticFuzion. Built with Docusaurus.`,
                },
                prism: {
                  theme: require('prism-react-renderer/themes/github'),
                  darkTheme: require('prism-react-renderer/themes/dracula'),
                },
              }),
          };
          
          module.exports = config;
          EOF
      
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      
      - name: Build website
        run: npm run build
        
      - name: Display build errors if any
        if: failure()
        run: |
          ls -la || true
          cat .docusaurus/build.errors.log || echo "No error log found"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
